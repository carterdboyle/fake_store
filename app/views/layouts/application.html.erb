<!DOCTYPE html>
<html class="h-full scroll-smooth">
  <head>
    <title><%= content_for(:title) || "Fake Store" %></title>
    <meta name="viewport" content="width=device-width,initial-scale=1">
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="mobile-web-app-capable" content="yes">
    <%= csrf_meta_tags %>
    <%= csp_meta_tag %>

    <%= yield :head %>

    <%# Enable PWA manifest for installable apps (make sure to enable in config/routes.rb too!) %>
    <%#= tag.link rel: "manifest", href: pwa_manifest_path(format: :json) %>

    <link rel="icon" href="/icon.png" type="image/png">
    <link rel="icon" href="/icon_.svg" type="image/svg+xml">
    <link rel="apple-touch-icon" href="/icon.png">

    <%# Includes all stylesheet files in app/assets/stylesheets %>
    <%= stylesheet_link_tag :app, "data-turbo-track": "reload" %>
    <%= javascript_importmap_tags %>
  </head>

  <body class="min-h-dvh flex flex-col"> 
    <%= render "shared/desktop_gate" %>

    <%= render "layouts/navigation" %>
    <div id="flash">
      <%= render "shared/flash" %>
    </div>

    <main class="container flex grow mx-auto min-h-0 py-14 px-5 justify-center">
      <%= yield %>
    </main>

    <%= render "shared/back_to_top" %>
    <%= render "layouts/footer" %>

    <script>
      (function () {
        // Detect mobile-ish contexts (UA or coarse pointer or narrow viewport)
        const ua = navigator.userAgent || "";
        const isUA = /Mobi|Android|iPhone|iPad|iPod/i.test(ua);
        const isCoarse = window.matchMedia && matchMedia("(pointer: coarse)").matches;
        const isNarrow = Math.min(window.innerWidth, window.innerHeight) < 900;
        const isMobileLike = isUA || isCoarse || isNarrow;

        if (!isMobileLike) return; // desktop: do nothing

        // 1) Lock layout to desktop width (no shrink, allow horizontal scroll)
        document.documentElement.classList.add("mobile-locked");
        document.body.classList.add("mobile-locked");

        // 2) Show banner
        const gate = document.getElementById("desktop-gate");
        if (!gate) return;
        gate.classList.remove("hidden");
        document.documentElement.classList.add("dg-open");

        // Adjust top padding to exact banner height (in case fonts differ)
        const applyOffset = () => {
          document.body.style.paddingTop = gate.offsetHeight + "px";
        };
        applyOffset();
        window.addEventListener("resize", applyOffset);

        // 3) Wire up actions
        const copyBtn = document.getElementById("dg-copy");
        const contBtn = document.getElementById("dg-continue");

        if (copyBtn) {
          copyBtn.addEventListener("click", async () => {
            const url = location.href;
            try {
              await navigator.clipboard.writeText(url);
              copyBtn.textContent = "Copied!";
              setTimeout(() => (copyBtn.textContent = "Copy link"), 1200);
            } catch {
              prompt("Copy link:", url);
            }
          });
        }

        if (contBtn) {
          contBtn.addEventListener("click", () => {
            gate.classList.add("hidden");
            document.documentElement.classList.remove("dg-open");
            // Keep the desktop lock in place.
            document.body.style.paddingTop = "";
            window.removeEventListener("resize", applyOffset);
          });
        }
      })();
      </script>
  </body>
</html>
